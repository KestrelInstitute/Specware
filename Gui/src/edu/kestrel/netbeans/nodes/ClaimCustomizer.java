/*
 * ClaimCustomizer.java
 *
 * Created on February 16, 2003, 4:47 PM
 */

package edu.kestrel.netbeans.nodes;

import edu.kestrel.netbeans.model.ClaimElement;
import edu.kestrel.netbeans.editor.MetaSlangSyntax;
import edu.kestrel.netbeans.nodes.SourceEditSupport.ExceptionalRunnable;

import java.util.ResourceBundle;

import javax.swing.*;
import javax.swing.border.*;

import org.openide.ErrorManager;
import org.openide.util.NbBundle;
import org.openide.src.SourceException;


/**
 *
 * @author  weilyn
 */
public class ClaimCustomizer extends javax.swing.JPanel {
    /** Source of the localized human presentable strings. */
    static ResourceBundle bundle = NbBundle.getBundle(ClaimCustomizer.class);

    /** The edited claim */
    ClaimElement element;
    
    boolean isOK = true;
    
    /** Creates new customizer ClaimCustomizer */
    public ClaimCustomizer(ClaimElement element) {
        this.element = element;   
        
        initComponents();
        //borders
        setBorder (new CompoundBorder(
                       new TitledBorder(bundle.getString("CTL_ClaimFrame")),
                       new EmptyBorder(new java.awt.Insets(5, 5, 5, 5)))
                       );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        labelsPanel = new javax.swing.JPanel();
        kindLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        expressionLabel = new javax.swing.JLabel();
        valuesPanel = new javax.swing.JPanel();
        kindComboBox = new javax.swing.JComboBox();
        nameTextField = new javax.swing.JTextField();
        expressionPane = new javax.swing.JScrollPane();
        expressionTextArea = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        setMinimumSize(new java.awt.Dimension(500, 800));
        setPreferredSize(new java.awt.Dimension(300, 150));
        labelsPanel.setLayout(new java.awt.GridLayout(3, 1, 0, 10));

        labelsPanel.setPreferredSize(new java.awt.Dimension(100, 150));
        kindLabel.setText("Kind of Claim:  ");
        kindLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelsPanel.add(kindLabel);

        nameLabel.setText("Name:  ");
        labelsPanel.add(nameLabel);

        expressionLabel.setText("Expression:  ");
        labelsPanel.add(expressionLabel);

        add(labelsPanel, java.awt.BorderLayout.CENTER);

        valuesPanel.setLayout(new java.awt.GridLayout(3, 1, 0, 10));

        valuesPanel.setMinimumSize(new java.awt.Dimension(400, 620));
        valuesPanel.setPreferredSize(new java.awt.Dimension(150, 150));
        kindComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "axiom", "theorem", "conjecture" }));
        kindComboBox.setMaximumSize(new java.awt.Dimension(500, 50));
        kindComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kindComboBoxActionPerformed(evt);
            }
        });

        valuesPanel.add(kindComboBox);

        nameTextField.setText("newClaim");
        nameTextField.setMaximumSize(new java.awt.Dimension(500, 50));
        nameTextField.setMinimumSize(new java.awt.Dimension(50, 20));
        valuesPanel.add(nameTextField);

        expressionPane.setMaximumSize(new java.awt.Dimension(500, 200));
        expressionPane.setMinimumSize(new java.awt.Dimension(200, 200));
        expressionTextArea.setMaximumSize(new java.awt.Dimension(500, 200));
        expressionTextArea.setMinimumSize(new java.awt.Dimension(200, 200));
        expressionPane.setViewportView(expressionTextArea);

        valuesPanel.add(expressionPane);

        add(valuesPanel, java.awt.BorderLayout.EAST);

    }//GEN-END:initComponents

    private void kindComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kindComboBoxActionPerformed
        Object selItem = kindComboBox.getSelectedItem();
        String oldValue = element.getClaimKind();
        boolean ok = false;
        
        if (selItem != null) {
            try {
                final String newValue = selItem.toString();
                if (oldValue == null || !oldValue.equals(newValue)) {
                    try {
                        SourceEditSupport.runAsUser(element, new ExceptionalRunnable() {
                            public void run() throws SourceException {
                                element.setClaimKind(newValue);
                            }
                        });
                        ok = true;
                    }
                    catch (SourceException e) {
                        ErrorManager.getDefault().notify(e);
                    }
                } else
                    return;
            }
            catch (IllegalArgumentException e) {
                // Should not happen!
                ErrorManager.getDefault().annotate(
                    e, ErrorManager.USER, null, 
                    bundle.getString("MSG_Not_Valid_ClaimKind"),
                    null, null);
                ErrorManager.getDefault().notify(e);
            }
        }
        isOK = ok;
        if (!ok)
            kindComboBox.setSelectedItem(oldValue);
    }//GEN-LAST:event_kindComboBoxActionPerformed
    
    private void nameTextFieldFocusLost (java.awt.event.FocusEvent evt) {
        if (evt != null && evt.isTemporary())
            return;

        final String newName = nameTextField.getText();
        String oldName = element.getName();
        boolean ok = false;
        Exception x = null;

        if (MetaSlangSyntax.isMetaSlangIdentifier(newName)) {
            if (oldName == null || !oldName.equals(newName)) {
                try {
                    SourceEditSupport.runAsUser(element, new ExceptionalRunnable() {
                        public void run() throws SourceException {
                            element.setName(newName);
                        }
                    });
                    ok = true;
                }
                catch (SourceException e) {
                    x = e;
                }
            } else
                return;
        } else {
            x = new IllegalArgumentException("Invalid name"); // NOI18N
            ErrorManager.getDefault().annotate(
                x, ErrorManager.USER, null, 
                bundle.getString("MSG_Not_Valid_Identifier"),
                null, null);
        }
        isOK = ok;
        if (!ok) {
            nameTextField.setText(oldName);
        }
        if (x != null) {
            ErrorManager.getDefault().notify(x);
        }
    }
    
    private void expressionTextAreaFocusLost (java.awt.event.FocusEvent evt) {
        if (evt != null && evt.isTemporary())
            return;

        final String newExpr = expressionTextArea.getText();
        String oldExpr = element.getExpression();
        boolean ok = false;
        Exception x = null;

        if (oldExpr == null || !oldExpr.equals(newExpr)) {
            try {
                SourceEditSupport.runAsUser(element, new ExceptionalRunnable() {
                    public void run() throws SourceException {
                        element.setExpression(newExpr);
                    }
                });
                ok = true;
            }
            catch (SourceException e) {
                x = e;
            }
        } else
            return;
        isOK = ok;
        if (!ok) {
            expressionTextArea.setText(oldExpr);
        }
        if (x != null) {
            ErrorManager.getDefault().notify(x);
        }
    }
    
    public boolean isOK() {
        kindComboBoxActionPerformed(null);
        nameTextFieldFocusLost(null);
        expressionTextAreaFocusLost(null);
        return isOK;
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel labelsPanel;
    private javax.swing.JComboBox kindComboBox;
    private javax.swing.JScrollPane expressionPane;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextArea expressionTextArea;
    private javax.swing.JLabel expressionLabel;
    private javax.swing.JLabel kindLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPanel valuesPanel;
    // End of variables declaration//GEN-END:variables
    
}
