/*
 * DefCustomizer.java
 *
 * Created on February 16, 2003, 7:36 PM
 */

package edu.kestrel.netbeans.nodes;

import edu.kestrel.netbeans.model.DefElement;
import edu.kestrel.netbeans.editor.MetaSlangSyntax;
import edu.kestrel.netbeans.nodes.SourceEditSupport.ExceptionalRunnable;

import java.util.ResourceBundle;

import javax.swing.*;
import javax.swing.border.*;

import org.openide.ErrorManager;
import org.openide.util.NbBundle;
import org.openide.src.SourceException;

/**
 *
 * @author  weilyn
 */
public class DefCustomizer extends javax.swing.JPanel {
    /** Source of the localized human presentable strings. */
    static ResourceBundle bundle = NbBundle.getBundle(DefCustomizer.class);

    /** The edited claim */
    DefElement element;
    
    boolean isOK = true;
    
    
    /** Creates new customizer DefCustomizer */
    public DefCustomizer(DefElement element) {
        this.element = element;   
        
        initComponents();
        //borders
        setBorder (new CompoundBorder(
                       new TitledBorder(bundle.getString("CTL_DefFrame")),
                       new EmptyBorder(new java.awt.Insets(5, 5, 5, 5)))
                       );
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        labelsPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        expressionLabel = new javax.swing.JLabel();
        valuesPanel = new javax.swing.JPanel();
        nameTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        expressionTextArea = new javax.swing.JTextArea();

        setLayout(new java.awt.BorderLayout());

        setPreferredSize(new java.awt.Dimension(300, 100));
        labelsPanel.setLayout(new java.awt.GridLayout(2, 1, 0, 10));

        labelsPanel.setPreferredSize(new java.awt.Dimension(100, 100));
        nameLabel.setText("Name:  ");
        labelsPanel.add(nameLabel);

        expressionLabel.setText("Expression:  ");
        labelsPanel.add(expressionLabel);

        add(labelsPanel, java.awt.BorderLayout.WEST);

        valuesPanel.setLayout(new java.awt.GridLayout(2, 1, 0, 10));

        valuesPanel.setPreferredSize(new java.awt.Dimension(200, 100));
        nameTextField.setText("newDef");
        valuesPanel.add(nameTextField);

        jScrollPane1.setViewportView(expressionTextArea);

        valuesPanel.add(jScrollPane1);

        add(valuesPanel, java.awt.BorderLayout.CENTER);

    }//GEN-END:initComponents

    private void nameTextFieldFocusLost (java.awt.event.FocusEvent evt) {
        if (evt != null && evt.isTemporary())
            return;

        final String newName = nameTextField.getText();
        String oldName = element.getName();
        boolean ok = false;
        Exception x = null;

        if (oldName == null || !oldName.equals(newName)) {
            try {
                SourceEditSupport.runAsUser(element, new ExceptionalRunnable() {
                    public void run() throws SourceException {
                        element.setName(newName);
                    }
                });
                ok = true;
            }
            catch (SourceException e) {
                x = e;
            }
        } else
            return;
        isOK = ok;
        if (!ok) {
            nameTextField.setText(oldName);
        }
        if (x != null) {
            ErrorManager.getDefault().notify(x);
        }
    }
    
    private void expressionTextAreaFocusLost (java.awt.event.FocusEvent evt) {
        if (evt != null && evt.isTemporary())
            return;

        final String newExpr = expressionTextArea.getText();
        String oldExpr = element.getExpression();
        boolean ok = false;
        Exception x = null;

        if (oldExpr == null || !oldExpr.equals(newExpr)) {
            try {
                SourceEditSupport.runAsUser(element, new ExceptionalRunnable() {
                    public void run() throws SourceException {
                        element.setExpression(newExpr);
                    }
                });
                ok = true;
            }
            catch (SourceException e) {
                x = e;
            }
        } else
            return;
        isOK = ok;
        if (!ok) {
            expressionTextArea.setText(oldExpr);
        }
        if (x != null) {
            ErrorManager.getDefault().notify(x);
        }
    }
    
    public boolean isOK() {
        nameTextFieldFocusLost(null);
        expressionTextAreaFocusLost(null);
        return isOK;
    }    

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel labelsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextArea expressionTextArea;
    private javax.swing.JLabel expressionLabel;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPanel valuesPanel;
    // End of variables declaration//GEN-END:variables
    
}
