// $ANTLR 2.7.1: "MetaSlangGrammar.g" -> "MetaSlangLexerFromAntlr.java"$

package edu.kestrel.netbeans.parser;

public interface MetaSlangParserFromAntlrTokenTypes {
	int EOF = 1;
	int NULL_TREE_LOOKAHEAD = 3;
	int LITERAL_print = 4;
	int LITERAL_spec = 5;
	int LITERAL_endspec = 6;
	int LITERAL_let = 7;
	int LITERAL_in = 8;
	int LITERAL_translate = 9;
	int LITERAL_by = 10;
	int LITERAL_qualifying = 11;
	int LITERAL_diagram = 12;
	int LBRACE = 13;
	int COMMA = 14;
	int RBRACE = 15;
	int LITERAL_colimit = 16;
	int LITERAL_morphism = 17;
	int ARROW = 18;
	int LITERAL_generate = 19;
	int STRING_LITERAL = 20;
	int LITERAL_obligations = 21;
	int LITERAL_prove = 22;
	int SLASH = 23;
	int INNER_UNIT_REF = 24;
	int IDENTIFIER = 25;
	int DOTDOT = 26;
	int LITERAL_sort = 27;
	int LITERAL_op = 28;
	int LBRACKET = 29;
	int RBRACKET = 30;
	int LITERAL_using = 31;
	int LITERAL_options = 32;
	int STAR = 33;
	int NON_WORD_SYMBOL = 34;
	int LITERAL_Snark = 35;
	int LITERAL_import = 36;
	int DOT = 37;
	int LPAREN = 38;
	int RPAREN = 39;
	int COLON = 40;
	int LITERAL_infixl = 41;
	int LITERAL_infixr = 42;
	int NAT_LITERAL = 43;
	int LITERAL_fa = 44;
	int LITERAL_def = 45;
	int LITERAL_theorem = 46;
	int LITERAL_axiom = 47;
	int LITERAL_conjecture = 48;
	int COLONCOLON = 49;
	int LITERAL_as = 50;
	int UBAR = 51;
	int LITERAL_quotient = 52;
	int VERTICALBAR = 53;
	int SEMICOLON = 54;
	int CHAR_LITERAL = 55;
	int LITERAL_true = 56;
	int LITERAL_false = 57;
	int LITERAL_case = 58;
	int LITERAL_choose = 59;
	int LITERAL_else = 60;
	int LITERAL_embed = 61;
	// "embed?" = 62
	int LITERAL_ex = 63;
	int LITERAL_fn = 64;
	int LITERAL_if = 65;
	int LITERAL_of = 66;
	int LITERAL_project = 67;
	int LITERAL_relax = 68;
	int LITERAL_restrict = 69;
	int LITERAL_then = 70;
	int LITERAL_where = 71;
	int LITERAL_is = 72;
	int VOCAB = 73;
	int WHITESPACE = 74;
	int LINE_COMMENT = 75;
	int BLOCK_COMMENT = 76;
	int LATEX_COMMENT = 77;
	int BACKWARDSARROW = 78;
	int LETTER = 79;
	int DIGIT = 80;
	int CHAR_GLYPH = 81;
	int OTHER_CHAR_GLYPH = 82;
	int ESC = 83;
	int HEXADECIMAL_DIGIT = 84;
	int STRING_LITERAL_GLYPH = 85;
	int WORD_START_MARK = 86;
	int WORD_CONTINUE_MARK = 87;
	int NON_WORD_MARK = 88;
}
