// $ANTLR 2.7.1: MetaSlangGrammar.g -> MetaSlangParserFromAntlrTokenTypes.txt$
MetaSlangParserFromAntlr    // output token vocab name
INNER_UNIT_REF("an inner-unit reference")=4
IDENTIFIER("an identifier")=5
LITERAL_spec="spec"=6
LITERAL_endspec="endspec"=7
LITERAL_import="import"=8
LITERAL_sort="sort"=9
LBRACE("'{'")=10
COMMA("','")=11
RBRACE("'}'")=12
DOT("'.'")=13
LPAREN("'('")=14
RPAREN("')'")=15
LITERAL_op="op"=16
NON_WORD_SYMBOL=17
LITERAL_def="def"=18
LITERAL_theorem="theorem"=19
LITERAL_axiom="axiom"=20
LITERAL_conjecture="conjecture"=21
UBAR("'_'")=22
LBRACKET("'['")=23
RBRACKET("']'")=24
NAT_LITERAL("an integer")=25
CHAR_LITERAL("a character")=26
STRING_LITERAL("a string")=27
LITERAL_true="true"=28
LITERAL_false="false"=29
LITERAL_as="as"=30
LITERAL_case="case"=31
LITERAL_choose="choose"=32
LITERAL_else="else"=33
LITERAL_embed="embed"=34
"embed?"=35
LITERAL_ex="ex"=36
LITERAL_fa="fa"=37
LITERAL_fn="fn"=38
LITERAL_if="if"=39
LITERAL_in="in"=40
LITERAL_let="let"=41
LITERAL_of="of"=42
LITERAL_project="project"=43
LITERAL_quotient="quotient"=44
LITERAL_relax="relax"=45
LITERAL_restrict="restrict"=46
LITERAL_then="then"=47
LITERAL_where="where"=48
LITERAL_is="is"=49
VOCAB=50
WHITESPACE=51
LINE_COMMENT=52
BLOCK_COMMENT=53
SEMICOLON("';'")=54
DOTDOT("'..'")=55
LETTER=56
DIGIT=57
CHAR_GLYPH=58
OTHER_CHAR_GLYPH=59
ESC=60
HEXADECIMAL_DIGIT=61
STRING_LITERAL_GLYPH=62
WORD_START_MARK=63
WORD_CONTINUE_MARK=64
NON_WORD_MARK=65
