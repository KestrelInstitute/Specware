// $ANTLR 2.7.1: MetaSlangGrammar.g -> MetaSlangParserFromAntlrTokenTypes.txt$
MetaSlangParserFromAntlr    // output token vocab name
INNER_UNIT_REF("an inner-unit reference")=4
IDENTIFIER("an identifier")=5
LITERAL_spec="spec"=6
LITERAL_endspec="endspec"=7
LITERAL_prove="prove"=8
LITERAL_import="import"=9
LITERAL_sort="sort"=10
LBRACE("'{'")=11
COMMA("','")=12
RBRACE("'}'")=13
DOT("'.'")=14
LPAREN("'('")=15
RPAREN("')'")=16
LITERAL_op="op"=17
NON_WORD_SYMBOL=18
LITERAL_def="def"=19
LITERAL_theorem="theorem"=20
LITERAL_axiom="axiom"=21
LITERAL_conjecture="conjecture"=22
UBAR("'_'")=23
LBRACKET("'['")=24
RBRACKET("']'")=25
NAT_LITERAL("an integer")=26
CHAR_LITERAL("a character")=27
STRING_LITERAL("a string")=28
LITERAL_true="true"=29
LITERAL_false="false"=30
LITERAL_as="as"=31
LITERAL_case="case"=32
LITERAL_choose="choose"=33
LITERAL_else="else"=34
LITERAL_embed="embed"=35
"embed?"=36
LITERAL_ex="ex"=37
LITERAL_fa="fa"=38
LITERAL_fn="fn"=39
LITERAL_if="if"=40
LITERAL_in="in"=41
LITERAL_let="let"=42
LITERAL_of="of"=43
LITERAL_project="project"=44
LITERAL_quotient="quotient"=45
LITERAL_relax="relax"=46
LITERAL_restrict="restrict"=47
LITERAL_then="then"=48
LITERAL_where="where"=49
LITERAL_is="is"=50
VOCAB=51
WHITESPACE=52
LINE_COMMENT=53
BLOCK_COMMENT=54
SEMICOLON("';'")=55
DOTDOT("'..'")=56
LETTER=57
DIGIT=58
CHAR_GLYPH=59
OTHER_CHAR_GLYPH=60
ESC=61
HEXADECIMAL_DIGIT=62
STRING_LITERAL_GLYPH=63
WORD_START_MARK=64
WORD_CONTINUE_MARK=65
NON_WORD_MARK=66
