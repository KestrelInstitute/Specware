// $ANTLR 2.7.1: MetaSlangGrammar.g -> MetaSlangParserFromAntlrTokenTypes.txt$
MetaSlangParserFromAntlr    // output token vocab name
INNER_UNIT_REF("an inner-unit reference")=4
IDENTIFIER("an identifier")=5
LITERAL_spec="spec"=6
LITERAL_endspec="endspec"=7
LITERAL_prove="prove"=8
LITERAL_in="in"=9
LITERAL_using="using"=10
COMMA("','")=11
LITERAL_options="options"=12
LITERAL_import="import"=13
LITERAL_sort="sort"=14
LBRACE("'{'")=15
RBRACE("'}'")=16
DOT("'.'")=17
LPAREN("'('")=18
RPAREN("')'")=19
LITERAL_op="op"=20
NON_WORD_SYMBOL=21
LITERAL_def="def"=22
LITERAL_theorem="theorem"=23
LITERAL_axiom="axiom"=24
LITERAL_conjecture="conjecture"=25
UBAR("'_'")=26
LBRACKET("'['")=27
RBRACKET("']'")=28
NAT_LITERAL("an integer")=29
CHAR_LITERAL("a character")=30
STRING_LITERAL("a string")=31
LITERAL_true="true"=32
LITERAL_false="false"=33
LITERAL_as="as"=34
LITERAL_case="case"=35
LITERAL_choose="choose"=36
LITERAL_else="else"=37
LITERAL_embed="embed"=38
"embed?"=39
LITERAL_ex="ex"=40
LITERAL_fa="fa"=41
LITERAL_fn="fn"=42
LITERAL_if="if"=43
LITERAL_let="let"=44
LITERAL_of="of"=45
LITERAL_project="project"=46
LITERAL_quotient="quotient"=47
LITERAL_relax="relax"=48
LITERAL_restrict="restrict"=49
LITERAL_then="then"=50
LITERAL_where="where"=51
LITERAL_is="is"=52
VOCAB=53
WHITESPACE=54
LINE_COMMENT=55
BLOCK_COMMENT=56
SEMICOLON("';'")=57
DOTDOT("'..'")=58
LETTER=59
DIGIT=60
CHAR_GLYPH=61
OTHER_CHAR_GLYPH=62
ESC=63
HEXADECIMAL_DIGIT=64
STRING_LITERAL_GLYPH=65
WORD_START_MARK=66
WORD_CONTINUE_MARK=67
NON_WORD_MARK=68
