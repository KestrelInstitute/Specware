// $ANTLR 2.7.1: MetaSlangGrammar.g -> MetaSlangParserFromAntlrTokenTypes.txt$
MetaSlangParserFromAntlr    // output token vocab name
LITERAL_print="print"=4
LITERAL_spec="spec"=5
LITERAL_endspec="endspec"=6
LITERAL_let="let"=7
LITERAL_in="in"=8
LITERAL_translate="translate"=9
LITERAL_by="by"=10
LITERAL_qualifying="qualifying"=11
LITERAL_diagram="diagram"=12
LBRACE("'{'")=13
COMMA("','")=14
RBRACE("'}'")=15
LITERAL_colimit="colimit"=16
LITERAL_morphism="morphism"=17
LITERAL_generate="generate"=18
LITERAL_obligations="obligations"=19
LITERAL_prove="prove"=20
INNER_UNIT_REF("an inner-unit reference")=21
IDENTIFIER("an identifier")=22
LITERAL_sort="sort"=23
LITERAL_op="op"=24
LBRACKET("'['")=25
RBRACKET("']'")=26
LITERAL_using="using"=27
LITERAL_options="options"=28
LITERAL_import="import"=29
DOT("'.'")=30
LPAREN("'('")=31
RPAREN("')'")=32
NON_WORD_SYMBOL=33
LITERAL_infixl="infixl"=34
LITERAL_infixr="infixr"=35
NAT_LITERAL("an integer")=36
LITERAL_def="def"=37
LITERAL_theorem="theorem"=38
LITERAL_axiom="axiom"=39
LITERAL_conjecture="conjecture"=40
LITERAL_fa="fa"=41
UBAR("'_'")=42
CHAR_LITERAL("a character")=43
STRING_LITERAL("a string")=44
LITERAL_true="true"=45
LITERAL_false="false"=46
LITERAL_as="as"=47
LITERAL_case="case"=48
LITERAL_choose="choose"=49
LITERAL_else="else"=50
LITERAL_embed="embed"=51
"embed?"=52
LITERAL_ex="ex"=53
LITERAL_fn="fn"=54
LITERAL_if="if"=55
LITERAL_of="of"=56
LITERAL_project="project"=57
LITERAL_quotient="quotient"=58
LITERAL_relax="relax"=59
LITERAL_restrict="restrict"=60
LITERAL_then="then"=61
LITERAL_where="where"=62
LITERAL_is="is"=63
VOCAB=64
WHITESPACE=65
LINE_COMMENT=66
BLOCK_COMMENT=67
LATEX_COMMENT=68
SEMICOLON("';'")=69
DOTDOT("'..'")=70
LETTER=71
DIGIT=72
CHAR_GLYPH=73
OTHER_CHAR_GLYPH=74
ESC=75
HEXADECIMAL_DIGIT=76
STRING_LITERAL_GLYPH=77
WORD_START_MARK=78
WORD_CONTINUE_MARK=79
NON_WORD_MARK=80
