#!/bin/bash --noprofile

PATH=/bin:/usr/bin:/etc:/sbin:/usr/sbin

# set -v

echo "  ------------------------------------------------------------------------"
echo "  Verify_Specware_Variables:  Ensure that SPECWARE4X shell variable is set:"
echo "  "

SCRIPT_DIR=`/usr/bin/dirname $0`

if [ -z "$SPECWARE4X" ]; then
  echo "  Verify_Specware_Variables:  SCRIPT_DIR = [$SCRIPT_DIR]"
  cd -P $SCRIPT_DIR
  SCRIPT_DIR=`pwd`
  echo "  Verify_Specware_Variables:  SCRIPT_DIR = [$SCRIPT_DIR]"
  PARENT_DIR=`dirname $SCRIPT_DIR`
  PARENT_DIR=`dirname $PARENT_DIR`
  PARENT_DIR=`dirname $PARENT_DIR`
  SPECWARE4X=`dirname $PARENT_DIR`
fi

echo "  Verify_Specware_Variables:  SCRIPT_DIR = [$SCRIPT_DIR]"

# Test whether SPECWARE4X is a directory
if [ ! -d "$SPECWARE4X" ]; then
   echo "Failed to $act, $SPECWARE4X is not a directory" 2>&1
   exit 1
fi

# Ensure SPECWARE4X is set to full pathname:
case "$SPECWARE4X" in
    /*) : ok;;
    *)  SPECWARE="`pwd`/$SPECWARE4X";;
esac

export SPECWARE4X
export BIN_DIR="$SPECWARE4X/Applications/Specware/bin/linux"
export GEN_DIR="$SPECWARE4X/Applications/Specware/lisp"

echo "  Verify_Specware_Variables:  SPECWARE4X = [$SPECWARE4X]"
echo "  Verify_Specware_Variables:  BIN_DIR    = [$BIN_DIR]"
echo "  Verify_Specware_Variables:  GEN_DIR    = [$GEN_DIR]"
echo "  "

if [ ! -d $BIN_DIR ]; then
   echo "Failed to $act, $BIN_DIR is not a directory" 2>&1
   exit 1
fi

if [ ! -d $GEN_DIR ]; then
   echo "mkdir $GEN_DIR"
   mkdir $GEN_DIR
fi

echo cd "$SPECWARE4X"/Applications/Specware
cd "$SPECWARE4X"/Applications/Specware
echo " "

# Happy...
# Don't exit explicitly -- this script gets included in others via bash's . convention
