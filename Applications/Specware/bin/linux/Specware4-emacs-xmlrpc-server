#!/bin/sh
#
# starts specware as xml-rpc server at port 2935 or at the port specified using the
# "-port n" command line option
# The "-load <lisp-file>" option can be used to pre-load any application specific functionality
# into the specware image. This file typically contains information and function definitions regarding
# functionality exported via the xml-rpc interface.
# 
# this is basically a copy of the Specware4-shell script with a modified lisp call

XMLRPC_SERVERPORT=2935
LOAD_LISP_FILE=""
while [ $# -gt 0 ]; do
    case $1 in
    -port) shift;XMLRPC_SERVERPORT=$1;;
    -l*) shift;LOAD_LISP_FILE=$1;;
    esac
    shift
done

xemacs=`which xemacs`
act='launch Specware'

PATH=/bin:/usr/bin:/etc:/sbin:/usr/sbin

# Test whether SPECWARE4 has been set

if [ -z "$SPECWARE4" ]; then
    echo "Failed to $act, SPECWARE4 environment variable not set" 2>&1
    exit 1
fi

# Test whether SPECWARE4 is a directory

if [ ! -d "$SPECWARE4" ]; then
   echo "Failed to $act, $SPECWARE4 is not a directory" 2>&1
   exit 1
fi

# Ensure SPECWARE4 is set to full pathname:

case "$SPECWARE4" in
    /*) : ok;;
    *)  SPECWARE4="`pwd`/$SPECWARE4";;
esac

#echo "\$SPECWARE4=$SPECWARE4"

# Test whether SPECWARE4 has been set

if [ -z "$SPECWARE4" ]; then
    echo "Failed to $act, SPECWARE4 environment variable not set" 2>&1
    exit 1
fi

# Test whether SPECWARE4 is a directory

if [ ! -d "$SPECWARE4" ]; then
   echo "Failed to $act, $SPECWARE4 is not a directory" 2>&1
   exit 1
fi

# Ensure SPECWARE4 is set to full pathname:

case "$SPECWARE4" in
    /*) : ok;;
    *)  SPECWARE4="`pwd`/$SPECWARE4";;
esac

if [ ! -d "$SPECWARE4"/Applications/Specware ]; then
   echo "Failed to $act: could not find directory
   $SPECWARE4/Applications/Specware" 2>&1
   exit 1
fi

SPECWARE_BIN="$SPECWARE4"/Applications/Specware/bin/linux

# Try to find lisp executable:

if [ -z "$LISP" ]; then
   for L in /usr/local/acl/acl62/alisp /usr/local/acl/acl61/alisp /usr/local/acl/acl501/lisp; do
      if [ -x "$L" ]; then
         LISP="$L"; break
      fi
   done
fi

if [ -z "$LISP" ]; then
   echo "Failed to $act, no LISP executable found" 2>&1
   exit 1
fi

if [ ! -x "$LISP" ]; then
   echo "Failed to $act, $LISP is not executable" 2>&1
   exit 1
fi

if [ -z "$IMAGE_EXTENSION" ]; then
   IMAGE_EXTENSION="dxl"
fi

#echo "\$IMAGE_EXTENSION=$IMAGE_EXTENSION"

LISP_DIR=`dirname "$LISP"`
LISP_EXECUTABLE="$LISP"
LISP_HEAP_IMAGE="$SPECWARE_BIN"/Specware4."$IMAGE_EXTENSION"
LISP_DIRECTORY="$SPECWARE4"/
export LISP_EXECUTABLE
export LISP_HEAP_IMAGE
export LISP_DIRECTORY

EVAL="(progn "
EVAL="${EVAL}(Specware::initializeSpecware-0) "
EVAL="${EVAL}(start-xml-rpc-server ${XMLRPC_SERVERPORT}) "
if [ ! -z "${LOAD_LISP_FILE}" ] ; then
    EVAL="${EVAL} (specware::compile-and-load-lisp-file \"${LOAD_LISP_FILE}\") "
fi
EVAL="${EVAL}(swshell::specware-shell nil) "
EVAL="${EVAL})"

SPECWARE_INIT_FORM="$EVAL"
export SPECWARE_INIT_FORM

xemacs -l "$SPECWARE4"/Library/IO/Emacs/load-ilisp \
       $* \
       -eval "(run-specware4)" &

#"$LISP" -I "$LISP_HEAP_IMAGE" -e "(progn \
#(setq emacs::*use-emacs-interface?* nil) \
#(Specware::initializeSpecware-0) \
#(start-xml-rpc-server ${XMLRPC_SERVERPORT}))"
