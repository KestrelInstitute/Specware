#!/bin/bash --noprofile
# set -v


# Some machines require the dynamic space size to be smaller (e.g. 800)
# On those, preset SBCL_SIZE before invoking this script.
export SBCL_SIZE="${SBCL_SIZE:=2400}"

SCRIPTDIR=`/usr/bin/dirname $0`

export LISP_MODE="SBCL"
export FASL_EXTENSION="sfsl"
export IMAGE_EXTENSION="sbclimage"
export EXECUTABLE_EXTENSION="sbclexe"

echo "  ------------------------------------------------------------------------"
echo "  Verify_SBCL:  Ensure that SBCL executable exists:"
echo " "

# I added the last option here according to this comment from the SBCL INSTALL file:
#   If your "INSTALL_ROOT" was FOO, then your "SBCL_HOME" is "FOO/lib/sbcl".
for L in /opt/local/bin/sbcl /usr/local/bin/sbcl "$HOME"/bin/sbcl /bin/lisp /usr/bin/sbcl "${SBCL_HOME}/../../bin/sbcl" ; do
  if [ -x "$L" ]; then
    export LISP="$L"; break
  fi
done


if [ -z "$LISP" ]; then
  echo "  Verify_SBCL:  Could not find SBCL lisp"
  if [ "[$1]" != "[DONT-FAIL]" ]; then
    echo "[$1] != [DONT-FAIL]"
    sleep 10
    exit 1
  fi
fi

# be careful to use double-dash!  "-dynamic-space-size 800" would be silently ignored!
# 512 is default
# see assignment of SBCL_SIZE at start of script
# 1000 was too large, but now 1200 seems ok (?) 

if [$BIG_LISP == ""]; then
  export BIG_LISP="$LISP --dynamic-space-size $SBCL_SIZE --end-runtime-options"
fi
export LISP_VERSION="SBCL"
export BATCH_LISP="$BIG_LISP --disable-debugger"

$BATCH_LISP <<-XXXX
XXXX
if [ $? != 0 ]; then
  echo "SBCL_SIZE was too large: $SBCL_SIZE.  Using 2000 instead"
  export SBCL_SIZE=2000
  export BIG_LISP="$LISP --dynamic-space-size $SBCL_SIZE --end-runtime-options"
  export LISP_VERSION="SBCL"
  export BATCH_LISP="$BIG_LISP --disable-debugger"
fi

# From sbcl web page:
#================================================================================  
# sbcl runtime-option* --end-runtime-options toplevel-option* --end-toplevel-options user-options*
#================================================================================  
# runtime options:
#
#  --core corefilename
#      Run the specified Lisp core file instead of the default. 
#      Note that if the Lisp core file is a user-created core file, 
#      it may run a nonstandard toplevel which does not recognize the standard toplevel options.
#  --dynamic-space-size megabytes
#      Size of the dynamic space reserved on startup in megabytes. 
#      Default value is platform dependent.
#  --noinform
#      Suppress the printing of any banner or other informational message at startup. 
#      This makes it easier to write Lisp programs which work cleanly in Unix pipelines. 
#      See also the --noprint and --disable-debugger options.
#  --help
#      Print some basic information about SBCL, then exit.
#  --version
#      Print SBCL's version information, then exit. 
#================================================================================  

export BATCH_SPECWARE=${BATCH_SPECWARE:-"$SPECWARE4/Applications/Specware/bin/unix/Specware4.${EXECUTABLE_EXTENSION} --dynamic-space-size $SBCL_SIZE --end-runtime-options"}
export BATCH_BOOTSTRAP=${BATCH_BOOTSTRAP:-"$LISP --core $SPECWARE4/Applications/Specware/bin/unix/Bootstrap.${IMAGE_EXTENSION} --dynamic-space-size $SBCL_SIZE --end-runtime-options"}

echo " "
echo "  Verify_SBCL:  LISP_MODE            = [$LISP_MODE]"
echo "  Verify_SBCL:  LISP                 = [$LISP]"
echo "  Verify_SBCL:  BIG_LISP             = [$BIG_LISP]"
echo "  Verify_SBCL:  LISP_VERSION         = [$LISP_VERSION]"
echo "  Verify_SBCL:  FASL_EXTENSION       = [$FASL_EXTENSION]"
echo "  Verify_SBCL:  IMAGE_EXTENSION      = [$IMAGE_EXTENSION]"
echo "  Verify_SBCL:  EXECUTABLE_EXTENSION = [$EXECUTABLE_EXTENSION]"
echo "  Verify_SBCL:  BATCH_LISP           = [$BATCH_LISP]"
echo "  Verify_SBCL:  BATCH_SPECWARE       = [$BATCH_SPECWARE]"
echo "  Verify_SBCL:  BATCH_BOOTSTRAP      = [$BATCH_BOOTSTRAP]"
echo "  "

