Type:
    'BooleanType
    IntegerType
    ArrayType
    TypeName
    KeyType

TypeDescriptor:
    Type
    RecordTypeDescriptor
    EnumerationTypeDescriptor

IntegerType:
    'Int  Expression  Expression
    'Unsigned  Expression
    'Signed  Expression
    'Bit
    'Byte
    'Word

ArrayType:
    Type  ArrayBounds

ArrayBounds:
    [  Expression  ]  Expression

TypeName:
    Identifier

KeyType:
    'AESKey  Expression
    'DESKey  Expression
    'RSAPublicKey  Expression
    'RSAPrivateKey  Expression
    'RSAPrivateCrtKey  Expression
    'DSAPublicKey  Expression
    'DSAPrivateKey  Expression
    'ECFPPublicKey  Expression
    'ECFPPrivateKey  Expression

RecordTypeDescriptor:
    ProperComponentList

ProperComponentList:
    Component  {  Component  }

Component:
    Type  ComponentName

ComponentName:
    Identifier

EnumerationTypeDescriptor:
    ProperOptionList

ProperOptionList:
    Option  {  Option  }

Option:
    OptionName  [  Type  {  Type  }  ]

OptionName:
    Identifier

Expression:
    TightExpression
    ConditionalExpression

TightExpression:
    ClosedExpression
    Formula

ClosedExpression:
    ConstantName
    VariableName
    ArgumentName
    Literal
    BytesToWordConversion
    ArrayConstruction
    ArraySelection
    BitToByteArrayConversion
    IntegerToArrayConversion
    ArrayReversal
    RecordConstruction
    RecordSelection
    TaggedValueConstruction
    RandomExpression
    CryptoExpression
    DigestExpression
    ChecksumExpression
    Expression

ConstantName:
    Identifier

VariableName:
    Identifier

ArgumentName:
    Identifier

Literal:
    BooleanLiteral
    IntegerLiteral

BooleanLiteral:
    'true
    'false

IntegerLiteral:
    DecimalIntegerLiteral
    HexadecimalIntegerLiteral

BytesToWordConversion:
    Expression  Expression

ArrayConstruction:
    'display  ProperExpressionList?
    'repeat  Expression  Expression

ArraySelection:
    'element  ClosedExpression  ArraySelector
    'length  ClosedExpression

ArraySelector:
    'single Expression
    'subFromTo  From  To
    'subFromLength  From  Length

From:
    Expression

To:
    Expression

Length:
    Expression

BitToByteArrayConversion:
    Expression

IntegerToArrayConversion:
    ConversionIdentifier  Width?  Expression

ConversionIdentifier:
    'ubits
    'sbits
    'ubytes
    'sbytes

Width:
    Expression

ArrayReversal:
    Expression

RecordConstruction:
    Type  ProperExpressionList

ProperExpressionList:
    Expression  {  Expression  }

RecordSelection:
    ClosedExpression  ComponentName

TaggedValueConstruction:
    OptionName  [  ProperExpressionList  ]

ConditionalExpression:
    Condition   IfTrue   IfFalse

Condition:
    Expression

IfTrue:
    Expression

IfFalse:
    Expression

RandomExpression:
    Type

CryptoExpression:
    EncryptDecryptExpression
    SignExpression
    VerifyExpression

EncryptDecryptExpression:
    EncryptDecrypt  Key  Message  [  EncryptDecryptParameters  ]

EncryptDecrypt:
    'encrypt
    'decrypt

Key:
    Expression

Message:
    Expression

EncryptDecryptParameters:
    SymmetricEncryptDecryptParameters
    AsymmetricEncryptDecryptParameters

SymmetricEncryptDecryptParameters:
    Mode  [  SymmetricPaddingMethod  ]

Mode:
    'ECB
    'CBC  [  InitializationVector  ]

InitializationVector:
    Expression

SymmetricPaddingMethod:
    'ISO9797M1
    'ISO9797M2
    'PKCS5
    'ISO97971M2ALG3

AsymmetricEncryptDecryptParameters:
    AsymmetricPaddingMethod

AsymmetricPaddingMethod:
    'ISO14888
    'ISO9796
    'PKCS1
    'PKCS1OAEP
    'PKCS1PSS
    'RFC2409

SignExpression:
    SignArguments

SignArguments:
    Key  Message  [  SignParameters  ]

SignParameters:
    AESSignParameters
    DESSignParameters
    RSASignParameters

AESSignParameters:
    InitializationVector

DESSignParameters:
    Mac  [  InitializationVector  ]  [  SymmetricPaddingMethod  ]

Mac:
    'MAC4
    'MAC8

RSASignParameters:
    DigestMethod  AsymmetricPaddingMethod

DigestMethod:
    'SHA
    'MD5
    'RIPEMD160

VerifyExpression:
    Signature  SignArguments

Signature:
    Expression

DigestExpression:
    DigestMethod  Expression

ChecksumExpression:
    ChecksumMethod  Expression  InitializationVector

ChecksumMethod:
    'ISO3309CRC16
    'ISO3309CRC32

Formula:
    PrefixFormula
    InfixFormula

PrefixFormula:
    PrefixOp  Operand

InfixFormula:
    Operand  InfixOp  Operand

Operator:
    PrefixOp
    InfixOp

PrefixOp:
    'minus
    'not

InfixOp:
    'plus
    'minus
    'times
    'dividedBy
    'modulo
    'toThepower
    'equals
    'unequal
    'lessThan
    'atMost
    'greaterThan
    'atLeast
    'and
    'inclusiveOr
    'exclusiveOr
    'implies
    'concatenate

Operand:
    TightExpression

Block:
    StatementSequence

StatementSequence:
    {  Statement  }

Statement:
    LocalVariableDeclaration
    Assignment
    ResponseStatement
    IfStatement
    SwitchStatement
    WhileStatement
    KeyGeneration

LocalVariableDeclaration:
    Type  VariableName  Initializer?

Initializer:
    Expression

Assignment:
    LeftHandSide  Expression

LeftHandSide:
    ConstantName
    VariableName
    LHSArraySelection
    LHSRecordSelection

LHSArraySelection:
    LeftHandSide  ArraySelector

LHSRecordSelection:
    LeftHandSide  ComponentName

ResponseStatement:
    'respond  Response
    'respondok  OKResponse

Response:
    'oneExpr Exprression
    'twoExpr Exprression  Exprression
    'threeExpr Exprression  Exprression  Exprression

OKResponse:
    Expression?

IfStatement:
    Expression  Block  [  ElsePart  ]

ElsePart:
    Block
    IfStatement

SwitchStatement:
    Expression  CaseSequence

CaseSequence:
    {  Case  }  DefaultCase?

Case:
    Pattern  Block

Pattern:
    OptionName  [  ProperOptionArgumentList  ]

ProperOptionArgumentList:
    ArgumentName  {  ArgumentName  }

DefaultCase:
    Block

WhileStatement:
    Expression  Block

KeyGeneration:
    LeftHandSide  LeftHandSide  {  Expression  }

Specification:
    {  Declaration  }

Declaration:
    ConstantDeclaration
    TypeDeclaration
    StateSpaceDeclaration
    StateInvariantDeclaration
    InitDeclaration
    SelectDeclaration
    DeselectDeclaration
    CommandDeclaration

ConstantDeclaration:
    'initialized  Type?  ConstantName  Initializer
    'uninitialized  Type  ConstantName

TypeDeclaration:
    TypeName  TypeDescriptor

StateSpaceDeclaration:
    ProperStateVariableDeclarationList?

ProperStateVariableDeclarationList:
    StateVariableDeclaration  {  StateVariableDeclaration  }

StateVariableDeclaration:
    Type  VariableName  Initializer?

StateInvariantDeclaration:
    Expression

InitDeclaration:
    FormalArgumentList  Block  ByteRepresentation

ByteRepresentation:
    Expression

SelectDeclaration:
    Block

DeselectDeclaration:
    Block

CommandDeclaration:
    Security?  FormalCommand  Block  APDURepresentation

Security:
    {  SecurityOption  }

SecurityOption:
    'cmac
    'rmac
    'cdecrypt
    'rencrypt
    'all

FormalCommand:
    CommandName  FormalArgumentList

CommandName:
    Identifier

FormalArgumentList:
    [  FormalArgument  {  FormalArgument  }  ]

FormalArgument:
    Type  ArgumentName

APDURepresentation:
    ProperExpressionList
