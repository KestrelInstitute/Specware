<chapter id="emacs">

<title>Emacs Usage in &Specware</title>

<para>
There are a number of emacs commands for &Specware usage. We also list
some useful general-purpose commands. There is a &Specware mode for
editing &Specware; files.
</para>

<section>
<title>&Specware Mode Commands</title>

<para>
These are the commands available when editing [[.sw]] files. Some of
them are available in the &Specware menu in the menubar.
</para>

<informaltable frame="sides" colsep="1">
  <tgroup cols="3">
    <colspec colname="key"      colnum="1" colwidth="65"  rowsep="1">
    <colspec colname="name"     colnum="2" colwidth="140" rowsep="1">
    <colspec colname="descr"    colnum="3" colwidth="210" rowsep="1">
    <thead>
      <row>
	<entry colname="key">&nbsp; Key</entry>
	<entry colname="name">&nbsp; Name</entry>
	<entry colname="descr">&nbsp; Description</entry>
      </row>
    </thead>
    <tbody>
      <row>
	<entry colname="key">&nbsp; [[tab]]</entry>
        <entry colname="name">&nbsp; [[indent-line]]</entry>
	<entry colname="descr">&nbsp; Indents line based on context.</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[linefeed]]</entry>
        <entry colname="name">&nbsp; [[newline-and-indent]]</entry>
	<entry colname="descr">&nbsp; Same as return followed by tab.</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-tab]]</entry>
        <entry colname="name">&nbsp; [[back-to-outer-indent]]</entry>
	<entry colname="descr">&nbsp; Indents line for outer expression.</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-C-q]]</entry>
        <entry colname="name">&nbsp; [[indent-sexp]]</entry>
	<entry colname="descr">&nbsp; Indents parenthesized expression
	  following point.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-C-\]]</entry>
        <entry colname="name">&nbsp; [[indent-region]]</entry>
	<entry colname="descr">&nbsp; Indents region.</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-*]]</entry>
        <entry colname="name">&nbsp; [[switch-to-lisp]]</entry>
	<entry colname="descr">&nbsp; Switch to *Specware Shell* buffer.</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-.]]</entry>
        <entry colname="name">&nbsp; [[meta-point]]</entry>
	<entry colname="descr">&nbsp; 
	  Prompts for op or type name (with default based on symbol at
	  point), and goes to its definition. Searches only the units
	  that have been loaded. First searches for definitions
	  visible from the current unit.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-,]]</entry>
        <entry colname="name">&nbsp; [[continue-meta-point]]</entry>
	<entry colname="descr">&nbsp; If previous meta-point command
	  returned more than one definition, go to the next definition.
	  Can be repeated.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-|]]</entry>
        <entry colname="name">&nbsp; [[electric-pipe]]</entry>
	<entry colname="descr">&nbsp; Adds the skeleton of a new
	  case to a case statement, properly indented.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[C-c ;]]</entry>
        <entry colname="name">&nbsp; [[comment-region]]</entry>
	<entry colname="descr">&nbsp; Comment out the region. With 
	  a negative argument uncomments the region.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[C-c p]]</entry>
        <entry colname="name">&nbsp; [[process-current-file]]</entry>
	<entry colname="descr">&nbsp; Does [[proc]] on current file. 
	  Also available in dired where it applies to the file on the
	  current line. (This command will only work properly if the
	  top-level directory for the file is in SWPATH).
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[C-c C-p]]</entry>
        <entry colname="name">&nbsp; [[process-unit]]</entry>
	<entry colname="descr">&nbsp; Prompts for unitId to process.
	  Defaults to unitId for the current file. </entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[C-c g]]</entry>
        <entry colname="name">&nbsp; [[generate-lisp]]</entry>
	<entry colname="descr">&nbsp; Does [[gen-lisp]] on current file. With
          an argument compiles and loads the generated lisp.</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[C-c C-l]]</entry>
        <entry colname="name">&nbsp; [[generate-lisp]]</entry>
	<entry colname="descr">&nbsp; Does [[:swll]] on current file
          (generates lisp for local definitions of current file and
           compiles and loads them).</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[C-c !]]</entry>
        <entry colname="name">&nbsp; [[cd-current-directory]]</entry>
	<entry colname="descr">&nbsp; Does a :cd in the *Specware Shell* 
	  buffer to the directory of the current file.
	  Also available in dired.
	</entry>
      </row>
    </tbody>
  </tgroup>
</informaltable>

</section>

<section>
<title>&Specware Interaction Commands</title>

<para>
These are the commands available in the [[*Specware Shell*]] buffer.
</para>

<informaltable frame="sides" colsep="1">
  <tgroup cols="3">
    <colspec colname="key"      colnum="1" colwidth="35"  rowsep="1">
    <colspec colname="name"     colnum="2" colwidth="155" rowsep="1">
    <colspec colname="descr"    colnum="3" colwidth="225" rowsep="1">
    <thead>
      <row>
	<entry colname="key">&nbsp; Key</entry>
	<entry colname="name">&nbsp; Name</entry>
	<entry colname="descr">&nbsp; Description</entry>
      </row>
    </thead>
    <tbody>
<!--
      <row>
	<entry colname="key">&nbsp; [[M-*]]</entry>
        <entry colname="name">&nbsp; [[switch-to-lisp]]</entry>
	<entry colname="descr">&nbsp; When already in the
	  *Specware Shell* buffer, goes to the previous
	  source file buffer. 
	</entry>
      </row>
-->
      <row>
	<entry colname="key">&nbsp; [[M-.]]</entry>
        <entry colname="name">&nbsp; [[meta-point]]</entry>
	<entry colname="descr">&nbsp; 
	  Prompts for op or type name (with default based on symbol at
	  point), and goes to its definition. Searches only the units
	  that have been loaded.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-p]]</entry>
        <entry colname="name">&nbsp; [[previous-input]]</entry>
	<entry colname="descr">&nbsp; Gets previous input.</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-r]]</entry>
        <entry colname="name">&nbsp; [[previous-matching-input]]</entry>
	<entry colname="descr">&nbsp; Gets previous input matching
          regular expression (prompted for). Typically you can get
          a previous input by typing in a small substring. Repeating
          the command without changing the expression will find
	  earlier matches.
	</entry>
      </row>
    </tbody>
  </tgroup>
</informaltable>

</section>

<section>
<title>Other Useful Emacs Commands</title>

<para> 
These are a few general Emacs commands which are useful when
using Specware. Commands with no key sequences are executed using
[[M-x name]].  XEmacs can be customized using the [[Options]]
menu. For example, to make [[delete]] delete the selected region (as
in most Word Processing Programs), mouse [[Options]], [[Editing]],
[[Active Regions]]. To make the changes permanent, mouse [[Options]],
[[Save Options to Init File]].  
</para>

<informaltable frame="sides" colsep="1">
  <tgroup cols="3">
    <colspec colname="key"      colnum="1" colwidth="60"  rowsep="1">
    <colspec colname="name"     colnum="2" colwidth="125"  rowsep="1">
    <colspec colname="descr"    colnum="3" colwidth="230" rowsep="1">
    <thead>
      <row>
	<entry colname="key">&nbsp; Key</entry>
	<entry colname="name">&nbsp; Name</entry>
	<entry colname="descr">&nbsp; Description</entry>
      </row>
    </thead>
    <tbody>
      <row>
	<entry colname="key">&nbsp; [[C-h]]</entry>
        <entry colname="name">&nbsp; [[help]]</entry>
	<entry colname="descr">&nbsp; Help options. C-h m gives
	  help about the current mode. Also see Help menu in menubar.
        </entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[M-/]]</entry>
        <entry colname="name">&nbsp; [[dabbrev-expand]]</entry>
	<entry colname="descr">&nbsp; Does symbol completion based on
	  nearby words in buffer. Repeated key presses find additional
	  completions.
        </entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[C-sh- middle]]</entry>
        <entry colname="name">&nbsp; [[mode-motion-copy]]</entry>
	<entry colname="descr">&nbsp; Copies the (highlighted) identifier or
	  expression under the mouse to point.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; </entry>
        <entry colname="name">&nbsp; [[igrep]]</entry>
	<entry colname="descr">&nbsp; Greps for string in files. 
	  Brings up buffer with matching lines. Mouse middle on
	  a line to go to it. (In Windows requires installation of Cygwin.)
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; </entry>
        <entry colname="name">&nbsp; [[igrep-find]]</entry>
	<entry colname="descr">&nbsp; Like igrep but searches in
	  all subdirectories.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; </entry>
        <entry colname="name">&nbsp; [[fgrep]]</entry>
	<entry colname="descr">&nbsp; Like igrep except uses fgrep to search.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; </entry>
        <entry colname="name">&nbsp; [[fgrep-find]]</entry>
	<entry colname="descr">&nbsp; Like igrep-find except uses fgrep to search.
	  all subdirectories.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[C-x C-f]]</entry>
        <entry colname="name">&nbsp; [[find-file]]</entry>
	<entry colname="descr">&nbsp; Prompts for file to
	  edit. tab does filename completion.
        </entry>
      </row>
      <row>
	<entry colname="key">&nbsp; [[C-x d]]</entry>
        <entry colname="name">&nbsp; [[dired]]</entry>
	<entry colname="descr">&nbsp; Prompts for directory to edit.
	  Note that commands process-current-file and
	 cd-current-directory described in the previous section
	  are available in dired mode.
	</entry>
      </row>
      <row>
	<entry colname="key">&nbsp; </entry>
        <entry colname="name">&nbsp; [[viper-mode]]</entry>
	<entry colname="descr">&nbsp; Vi emulation mode for people
	  who like to edit using vi commands. Documentation is
	  available under [[C-h i]].
	</entry>
      </row>
    </tbody>
  </tgroup>
</informaltable>

</section>

<section>
<title>X-Symbol Mode</title>

<para> 
X-Symbol is an Emacs package that allows the appearance of non-ascii
symbols, such as mathematical operators and greek characters in
file buffers. 
</para>
</section>

<section>
<title>Hide/Show Commands</title>

<para> 
There is experimental support for hiding bodies of specs, definitions
and other multi-line constructs. The main command for hiding is
[[Shift-Middle]], i.e., holding down the shift key and middle-clicking
near the beginning of a multi-line construct. This will hide all but the first
line of the construct and display a [[...]] at the end of the line to
indicate that the body is hidden. Doing a shift-middle-click on this
line will expand the body. Thus shift-middle-click acts as a hiding
toggle.

There is a Hide/Show menu. The most useful commands it contains are
[[Show All]] and [[Hide All]]. [[Show All]] removes all hiding in the file.
[[Hide All]] hides the bodies of all top-level constructs. I.e.,
if it is multi-unit file, the the bodies of the units will be hidden,
and if is a single-unit file then the bodies of multi-line
declarations such as definitions and axioms will be hidden.

</para>
</section>


</chapter>
