% library:

InfiniteType [T : TYPE] : THEORY
BEGIN
  infinite : AXIOM EXISTS (f : [nat -> T]) : injective?(f)
  nonEmpty : THEOREM EXISTS (x : T) : TRUE
END InfiniteType


% actual spec:

Primitives : THEORY
BEGIN

  TypeName, Operation, Variable, AxiomName : TYPE+
  % (without "+", it cannot figure that types are inhabited and issues
  % a warning that datatype Expression may be empty)

  IMPORTING InfiniteType[TypeName],
            InfiniteType[Operation],
            InfiniteType[Variable],
            InfiniteType[AxiomName]

END Primitives



%list_properties [T : TYPE] : THEORY BEGIN

%  l : VAR list[T]

%%  notNullImpliesCons : THEOREM
%%    FORALL l : NOT l = null IMPLIES cons?(l)

%  zeroLengthIffNull : THEOREM
%    FORALL l : length(l) = 0 IFF null?(l)

%END list_properties


